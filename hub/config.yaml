version: "v0.5.0"

rbac:
  enabled: true

hub:
  #db:
  #  type: postgres
  extraConfig: |
    from kubespawner import KubeSpawner
    from tornado import gen
    import yaml

    class CustomKubeSpawner(KubeSpawner):
      @gen.coroutine
      def start(self):
        with open('/etc/jupyterhub/config/custom.memory') as f:
          custom_attr_lists = yaml.safe_load(f)
          for mem, users in custom_attr_lists.items():
            if self.user.name in users:
              self.mem_limit = attr
              self.mem_guarantee = attr
              break

        with open('/etc/jupyterhub/config/custom.image') as f:
          custom_attr_lists = yaml.safe_load(f)
          for attr, users in custom_attr_lists.items():
            if self.user.name in users:
              self.singleuser_image_spec = attr
              break

        return (yield super().start())
    c.JupyterHub.spawner_class = CustomKubeSpawner

auth:
  type: google

singleuser:
  memory:
    guarantee: 1G
    limit: 1G
  image:
    name: "berkeleydsep/singleuser-prob140"
    tag: "7128821"
  storage:
    capacity: 2Gi

admin:
  users:
    # infrastructure
    - rylo
    - yuvipanda
    # sp18 prob140 Professors
    - adhikari
    # sp18 prob140 GSIs
    - dibya.ghosh
    - zhang.j
